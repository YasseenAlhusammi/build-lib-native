name: Build and Publish Android Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java and Android SDK
      run: |
        # Install Android SDK command-line tools and other dependencies
        sudo apt-get update -qq
        sudo apt-get install -y openjdk-8-jdk wget unzip software-properties-common
        sudo add-apt-repository --yes ppa:linuxuprising/java
        sudo apt-get update -qq
        sudo apt-get install -y temurin-8-jdk

        # Download and set up Android SDK command-line tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip
        mkdir -p $HOME/Android/Sdk/cmdline-tools
        unzip -q commandlinetools-linux-6609375_latest.zip -d $HOME/Android/Sdk/cmdline-tools

        # Set environment variables directly for the current run
        echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $HOME/.bashrc
        echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $HOME/.bashrc
        echo "SDK_VERSION=android-33" >> $HOME/.bashrc
        echo "PATH=\$PATH:$HOME/Android/Sdk/cmdline-tools/tools/bin" >> $HOME/.bashrc
        source $HOME/.bashrc

        # List available NDK versions
        $HOME/Android/Sdk/cmdline-tools/tools/bin/sdkmanager --list

    - name: Install Android SDK and NDK
      shell: bash
      run: |
        # Install the latest NDK version (you can specify a version here if needed)
        $HOME/Android/Sdk/cmdline-tools/tools/bin/sdkmanager --install "ndk;latest" --channel=3
        $HOME/Android/Sdk/cmdline-tools/tools/bin/sdkmanager --install "platforms;android-33"

        # Verify installations
        java -version
        $HOME/Android/Sdk/cmdline-tools/tools/bin/sdkmanager --list

    - name: Install Python Dependencies
      shell: bash
      run: |
        # Install virtual environment tools
        sudo apt-get install -y python3-venv
        # Create a new virtual environment
        python3 -m venv .venv
        source .venv/bin/activate
        # Upgrade pip and install required packages
        pip install --upgrade pip
        pip install git+https://github.com/flet-dev/python-for-android.git@3.11.6
        pip install --upgrade cython

    - name: Build Android Package
      shell: bash
      run: |
        # Ensure p4a is installed and configured
        source .venv/bin/activate
        sudo apt-get install -y autoconf automake libtool make
        $HOME/Android/Sdk/cmdline-tools/tools/bin/sdkmanager --install "tools" "platform-tools"

        # Run p4a to create the distributive with custom libraries
        p4a create --requirements firebase-admin,cachecontrol,msgpack,requests,certifi,charset-normalizer,idna,urllib3,google-api-core,google-auth,cachetools,pyasn1-modules,pyasn1,rsa,pyasn1,googleapis-common-protos,protobuf,google-api-python-client,google-auth-httplib2,httplib2,pyparsing,uritemplate,google-cloud-firestore,google-cloud-core,proto-plus,google-cloud-storage,google-resumable-media,google-crc32c --arch arm64-v8a --arch armeabi-v7a --arch x86_64 --sdk-dir $HOME/Android/Sdk --ndk-dir $HOME/Android/Sdk/ndk/$(ls $HOME/Android/Sdk/ndk) --dist-name mydist

    - name: List APK files
      shell: bash
      run: |
        ls -la bin/*.apk
