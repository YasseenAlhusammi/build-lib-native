name: Android SDK Setup and Python Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Java and dependencies
      - name: Install Java and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk wget unzip python3-venv autoconf automake libtool make

      # Set up environment variables for Java
      - name: Set Java environment variables
        run: |
          echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
          echo "PATH=$PATH:/usr/lib/jvm/java-11-openjdk-amd64/bin" >> $GITHUB_ENV

      # Install Android SDK command-line tools
      - name: Install Android SDK
        run: |
          mkdir -p $HOME/Android/Sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
          unzip commandlinetools-linux-7302050_latest.zip -d $HOME/Android/Sdk/cmdline-tools/
          mv $HOME/Android/Sdk/cmdline-tools/cmdline-tools $HOME/Android/Sdk/cmdline-tools/latest
          echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/Android/Sdk/cmdline-tools/latest/bin:$HOME/Android/Sdk/platform-tools" >> $GITHUB_ENV

      # Install required Android SDK components
      - name: Install Android SDK components
        run: |
          yes | sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"

      # Install the NDK 25b and other required SDK components
      - name: Install NDK 25b and SDK components
        run: |
          export ANDROID_SDK_ROOT=$HOME/Android/Sdk
          export NDK_VERSION=25.1.8937393  # NDK r25b version
          export SDK_VERSION=android-33
          yes | sdkmanager --install "ndk;$NDK_VERSION" --channel=3
          yes | sdkmanager --install "platforms;$SDK_VERSION"

      # Install Temurin8 for JRE 1.8
      - name: Install Temurin8 for JRE 1.8
        run: |
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository --yes ppa:linuxuprising/java
          sudo apt-get update -qq
          sudo apt-get install -y temurin-8-jdk

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install git+https://github.com/flet-dev/python-for-android.git@3.11.6
          pip install --upgrade cython

      # Build the distributive using p4a (Python-for-Android)
      - name: Build Android APK with p4a
        run: |
          source .venv/bin/activate  # Activate virtual environment
          p4a create --requirements firebase-admin,cachecontrol,msgpack,requests,certifi,charset-normalizer,idna,urllib3,google-api-core,google-auth,cachetools,pyasn1-modules,pyasn1,rsa,pyasn1,googleapis-common-protos,protobuf,google-api-python-client, google-auth-httplib2, httplib2, pyparsing, uritemplate, google-cloud-firestore, google-cloud-core, proto-plus, google-cloud-storage, google-resumable-media, google-crc32c --arch arm64-v8a --arch armeabi-v7a --arch x86_64 --sdk-dir $ANDROID_SDK_ROOT --ndk-dir $ANDROID_SDK_ROOT/ndk/$NDK_VERSION --dist-name mydist

      # Output environment variables for debugging
      - name: Debug Environment Variables
        run: |
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          echo "NDK_VERSION=$NDK_VERSION"
          echo "SDK_VERSION=$SDK_VERSION"
          
